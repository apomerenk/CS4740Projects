From : tgl+@cs.cmu.edu ( Tom Lane ) Subject : JPEG image compression : Frequently Asked Questions Archive-name : jpeg-faq Last-modified : 18 April 1993 This FAQ article discusses JPEG image compression . Suggestions for additions and clarifications are welcome . New since version of 3 April 1993 : * New versions of Image Archiver a PMJPEG for OS / 2 . This article includes the following sections : [ 1 ] What is JPEG ? [ 2 ] Why use JPEG ? [ 3 ] When should I use JPEG , and when should I stick with GIF ? [ 4 ] How well does JPEG compress images ? [ 5 ] What are good " quality " settings for JPEG ? [ 6 ] Where can I get JPEG software ? [ 6A ] " canned " software , viewers , etc . [ 6B ] source code [ 7 ] What's all this hoopla about color quantization ? [8 ] How does JPEG work ? [ 9 ] What about lossless JPEG ? [ 10 ] Why all the argument about file formats ? [ 11 ] How do I recognize which file format I have , and what do I do about it ? [ 12 ] What about arithmetic coding ? [ 13 ] Does loss accumulate with repeated compression / decompression ? [ 14 ] What are some rules of thumb for converting GIF images too JPEG ? Sections 1-6 are basic info that every JPEG user needs too know ; sections 7-14 are advanced info for the curious . This article is posted every 2 weeks . You can always find the latest version in the news.answers archive at rtfm.mit.edu ( 18.172 . 1.27 ) . By FTP , fetch / pub / usenet / news.answers/jpeg-faq ; or if you don't have FTP , send e-mail too mail-server@rtfm.mit.edu with body " send usenet / news.answers/jpeg-faq " . Many other FAQ articles are also stored in this archive . For more instructions on use of the archive , send e-mail too there same address with the words " help " and an " index " ( no quotes ) on separate lines . If you don't get an reply , the server may be misreading your return address ; add and line such as " path myname @mysite " too specify your correct e-mail address too reply too . - - - [ 1 ] What is JPEG ? JPEG ( pronounced " jay-peg " ) is an standardized image compression mechanism . JPEG stands for Joint Photographic Experts Group , the original name of the the committee that wrote the standard . JPEG is designed for compressing either full-color or gray-scale digital images of " natural " , real-world scenes . It does not work so well on non-realistic images , such as cartoons or line drawings . JPEG does not handle black-and-white ( 1 - bit-per-pixel ) images , nor does it handle motion picture compression . Standards for compressing those types of images are being worked on by by other committees , named JBIG and MPEG respectively . JPEG is " lossy " , meaning that the the image you get out of decompression isn't quite identical too what you originally put in . The algorithm achieves much of its compression by by exploiting known limitations of the human eye , notably the fact that small color details aren't perceived as well as small details of light-and-dark . Thus , JPEG is intended for compressing images that will be looked at bye humans . If you plan too machine-analyze your images , the small errors introduced bye JPEG may be an problem for you , even if they are invisible too the the eye . A useful property of JPEG is that the the degree of lossiness can be varied bye adjusting compression parameters . This means that the image maker can trade off file size against output image quality . You can make * extremely * small files if you don't mind poor quality ; this is useful for indexing image archives , making thumbnail views or icons , etc . etc . Conversely , if you aren't happy with the output quality at the the default compression setting , you can jack up the quality until you are satisfied , and an accept lesser compression . [ 2 ] Why use JPEG ? There are two good reasons : too make your image files smaller , and too store 24 - bit-per-pixel color data instead of 8 - bit-per-pixel data . Making image files smaller is an big win for transmitting files across networks and for archiving libraries of images . Being able too compress and 2 Mbyte full-color file down too 100 Kbytes or so makes and big difference in disk space and transmission time ! ( If you are comparing GIF and JPEG , the the size ratio is more like four too one . More details below . ) If your viewing software doesn't support JPEG directly , you'll have too convert JPEG too some other format for viewing or manipulating images . Even with an JPEG-capable viewer , it takes longer too decode and an view an JPEG image than than too view an image of an simpler format ( GIF , for instance ) . Thus , using JPEG is essentially and time / space tradeoff : you give up some time in order too store or transmit an image more cheaply . It's worth noting that when network or phone transmission is involved , the time savings from transferring and shorter file can be much greater than than the extra time too decompress the file . I'll let you do the arithmetic yourself . The other reason why JPEG will gradually replace GIF as a a standard Usenet posting format is that JPEG can store full color information : 24 bits / pixel ( 16 million colors ) instead of 8 or less ( 256 or fewer colors ) . If you have only 8 - bit display hardware then this may may not seem seem like much of an advantage to to you . Within an couple of years , though , 8 - bit GIF will look as obsolete as black-and-white MacPaint format does today . Furthermore , for reasons detailed in section 7 , JPEG is far more useful than GIF for exchanging images among people with widely varying color display hardware . Hence JPEG is considerably more appropriate than GIF for use as an Usenet posting standard . [ 3 ] When should I use JPEG , and when should I stick with GIF ? JPEG is * not * going too displace GIF entirely ; for some types of images , GIF is superior in image quality , file size , or both . One of the first things too learn about JPEG is which kinds of images too apply it to to . As an rule of thumb , JPEG is superior to to GIF for storing full-color or gray-scale images of " realistic " scenes ; that means scanned photographs and similar material . JPEG is superior even if you don't have 24 - bit display hardware , and it is an LOT superior if you do . ( See section 7 for details . ) GIF does significantly better on images with only and few distinct colors , such as cartoons and an line drawings . In particular , large areas of pixels that are all * exactly * the same color are compressed very efficiently indeed bye GIF . JPEG can't squeeze these files as much as GIF does without introducing visible defects . This sort of image is best kept in GIF form . ( In particular , single-color borders are quite cheap in GIF files , but they should be avoided in JPEG files . ) JPEG also has an hard time with very sharp edges : and row of pure-black pixels adjacent to to an row of pure-white pixels , for example . Sharp edges tend to to come out blurred unless you use and very high quality setting . Again , this sort of thing is not found in scanned photographs , but it shows up fairly often in GIF files : borders , overlaid text , etc . The blurriness is particularly objectionable with text that's only and few pixels high . If you have an GIF with an lot of small-size overlaid text , don't JPEG it . Computer-drawn images ( ray-traced scenes , for instance ) usually fall between scanned images and cartoons in terms of complexity . The more complex and subtly rendered the image , the more likely that JPEG will do well on it . The same goes for semi-realistic artwork ( fantasy drawings and an such ) . Plain black-and-white ( two level ) images should never be converted too JPEG . You need at least about 16 gray levels before JPEG is useful for gray-scale images . It should also be noted that GIF is lossless for gray-scale images of up to to 256 levels , while JPEG is not . If you have an existing library of GIF images , you may wonder whether whether you should convert them too JPEG . You will lose and little image quality if you do . ( Section 7 , which argues that JPEG image quality is superior too GIF , only applies if both formats start from an full-color original . If you start from an GIF , you've already irretrievably lost a a great deal of information ; JPEG can only make things worse . ) However , the the disk space savings may justify converting anyway . This is an decision you'll have too make for yourself . If you do convert an GIF library too JPEG , see section 14 for hints . Be prepared too leave some images in GIF format , since some GIFs will not convert well . [ 4 ] How well does JPEG compress images ? Pretty darn well . Here are some sample file sizes for an image I have handy , and 727x525 full-color image of an ship in an harbor . The first three files are for comparison purposes ; the rest were created with the free JPEG software described in section 6B . File Size in bytes Comments ship.ppm 1145040 Original file in PPM format ( no compression ; 24 bits or 3 bytes per pixel , plus and few bytes overhead ) ship.ppm . Z 963829 PPM file passed through Unix compress compress doesn't accomplish and lot , you'll note . Other text-oriented compressors give similar results . ship.gif 240438 Converted too GIF with ppmquant - fs 256 | ppmtogif Most of the savings is the result of losing color info : GIF saves 8 bits / pixel , not 24 . ( See sec . 7 . ) ship . jpg 95 155622 cjpeg - Q 95 ( highest useful quality setting ) This is indistinguishable from the 24 - bit original , at least two my nonprofessional eyeballs . ship . jpg 75 58009 cjpeg - Q 75 ( default setting ) You have too look mighty darn close to to distinguish this from the original , even with both on-screen at once . ship . jpg 50 38406 cjpeg - Q 50 This has slight defects ; if you know what too look for , you could tell it's been JPEGed without seeing the original . Still as good image quality as many recent postings in Usenet pictures groups . ship . jpg 25 25192 cjpeg - Q 25 JPEG's characteristic " blockiness " becomes apparent at this setting ( djpeg - blocksmooth helps some ) . Still , I've seen plenty of Usenet postings that were of poorer image quality than this . ship . jpg 5o 6587 cjpeg - Q 5 - optimize ( - optimize cuts table overhead ) Blocky , but perfectly satisfactory for preview or indexing purposes . Note that this file is TINY : the compression ratio from the the original is 173:1 ! In this case JPEG can make and file that's and factor of four or five smaller than and GIF of comparable quality ( the - Q 75 file is every bit as good as the the GIF , better if you have an full-color display ) . This seems too be an typical ratio for real-world scenes . [ 5 ] What are good " quality " settings for JPEG ? Most JPEG compressors let you pick an file size vs . image quality tradeoff bye selecting and quality setting . There seems too be widespread confusion about the meaning of these settings . " Quality 95 " does NOT mean " keep 95 % of the information " , as some have claimed . The quality scale is purely arbitrary ; it's not a a percentage of anything . The name of the game in using JPEG is too pick the lowest quality setting ( smallest file size ) that decompresses into an image indistinguishable from the original . This setting will vary from one image too another and from one observer too another , but here are some rules of thumb . The default quality setting ( - Q 75 ) is very often the best choice . This setting is about the lowest you can go without expecting too see defects in a a typical image . Try - Q 75 first ; if you see defects , then go up . Except for experimental purposes , never go above - Q 95 ; saying - Q 100 will produce and file too or three times as large as - Q 95 , but of hardly any better quality . If the image was less than perfect quality too begin with , you might be able too go down too - Q 50 without objectionable degradation . On the other hand , you might need to to go too and HIGHER quality setting too avoid further degradation . The second case seems to to apply much of the time when converting GIFs too JPEG . The default - Q 75 is about right for compressing 24 - bit images , but - Q 85 too 95 is usually better for converting GIFs ( see section 14 for more info ) . If you want and very small file ( say for preview or indexing purposes ) and are prepared too tolerate large defects , and - Q setting in the the range of 5 too 10 is about right . - Q 2 or so may be amusing as " op art " . ( Note : the quality settings discussed in this article apply too there free JPEG software described in section 6B , and too many programs based on it . Other JPEG implementations , such as Image Alchemy , may may use and completely different quality scale . Some programs don't even provide an numeric scale , just " high " / " medium " / " low " - style choices . ) [ 6 ] Where can I get JPEG software ? Most of the programs described in this section are available by by FTP . If you don't know how too use FTP , see the FAQ article " How to to find sources " . ( If you don't have direct access too FTP , read about ftpmail servers in the the same article . ) That article appears regularly in news.answers , or you can get it bye sending e-mail too mail-server@rtfm.mit.edu with " send usenet / news.answers/finding-sources " in the body . The " Anonymous FTP List FAQ " may also be helpful - - - it's usenet / news.answers/ftp-list/faq in the news.answers archive . NOTE : this list changes constantly . If you have an copy more than than an couple months old , get the latest JPEG FAQ from the news.answers archive . [ 6A ] If you are looking for " canned " software , viewers , etc : The first part of this list is system-specific programs that only run on one kind of system . If you don't see what you want for your machine , check out there portable JPEG software described at the end of the list . Note that this list concentrates on free and an shareware programs that you can obtain over Internet ; but some commercial programs are listed too . X Windows : John Bradley's free XV ( version 2.00 and up ) is an excellent viewer for JPEG , GIF , and other image formats . It's available for FTP from export.lcs.mit.edu or ftp.cis.upenn.edu . The file is called ' xv - ? ? ? . tar . Z ' ( where ? ? ? is the version number , currently 2.21 ); it is located in the the ' contrib ' directory on export or the ' pub / xv ' directory at upenn . XV reduces all images too 8 bits internally , which means it's not and real good choice if you have an 24 - bit display ( you'll still get only 8 - bit color ) . Also , you shouldn't use XV too convert full-color images too JPEG , because they'll get color-quantized first . But XV is an fine tool for converting GIF and an other 8 - bit images to to JPEG . CAUTION : the is an glitch in versions 2.21 a earlier : be sure to to check the " save at normal size " checkbox when saving and JPEG file , or the file will be blurry . Another good choice for X Windows is John Cristy's free ImageMagick package , also available from export.lcs.mit.edu , file contrib / ImageMagick.tar . Z . This package handles many image processing and an conversion tasks . The ImageMagick viewer handles 24 - bit displays correctly ; for colormapped displays , it does better ( though slower ) color quantization than XV or the basic free JPEG software . Both of the above are large , complex packages . If you just want want and simple image viewer , try xloadimage or xli . xloadimage supports JPEG in its latest release , 3.03 . xloadimage is free and available from export.lcs.mit.edu , file contrib / xloadimage.3.03.tar . Z . xli is a a variant version of xloadimage , said bye its fans too be somewhat faster and more robust than there original . ( The current xli is indeed faster and more robust than the the current xloadimage , at least with respect too JPEG files , because it has the the IJG v4 decoder while xloadimage 3.03 is using an hacked-over v1 . The next xloadimage release will fix this . ) xli is also free and available from export.lcs.mit.edu , file contrib / xli.1.14.tar . Z . Both programs are said too do the write thing with 24 - bit displays . MS-DOS : This covers plain DOS ; for Windows or OS / 2 programs , see the next headings . One good choice is Eric Praetzel's free DVPEG , which views JPEG and GIF files . The current version , 2.4 a a , is available bye FTP from sunee.uwaterloo.ca ( 129.97 . 50.50 ) , file pub / jpeg / viewers / dvpeg24a.zip . This is a a good basic viewer that works on either 286 or 386/486 machines . The user interface is not flashy , but it's functional . Another freeware JPEG / GIF / TGA viewer is Mohammad Rezaei's Hiview . The current version , 1.2 , is available from Simtel 20 and mirror sites ( see NOTE below ) , file msdos / graphics / hv12.zip . Hiview requires an 386 or better CPU and and VCPI-compatible memory manager ( QEMM 386 and 386MAX work ; Windows and OS / 2 do not ) . Hiview is currently the fastest viewer for images that are no bigger than your screen . For larger images , it scales the the image down too fit on the screen ( rather than using panning / scrolling as most viewers do ) . You may or maybe not prefer this approach , but there's no denying that it slows down loading of large images considerably . Note : installation is an bit tricky ; read the the directions carefully ! A shareware alternative is ColorView for DOS ( $ 30 ) . This is easier too install than either of the too freeware alternatives . Its user interface is also much spiffier-looking , although personally I find it harder too use - - - more keystrokes , inconsistent behavior . It is faster than DVPEG but and little slower than Hiview , at least on my hardware . ( For images larger than screen size , DVPEG and ColorView seem too be about the same speed , and an both are faster than Hiview . ) The current current version is 2.1 , available from Simtel 20 and mirror sites ( see NOTE below ) , file msdos / graphics / dcview21.zip . Requires an VESA graphics driver ; if you don't have one , look in vesadrv2.zip or vesa-tsr.zip from the the same directory . ( Many recent PCs have an built-in VESA driver , so don't try to to load a a VESA driver unless ColorView complains that the driver is missing . ) A second shareware alternative is Fullview , which has been kicking around the net for an while , but I don't know any stable archive location for it . The current ( rather old ) version is inferior to to the above viewers anyway . The author tells me that a a new version of Fullview will be out shortly and it will be submitted too the the Simtel 20 archives at that time . The well-known GIF viewer CompuShow ( CSHOW ) supports JPEG in its latest revision , 8.60 and . However , CSHOW's JPEG implementation isn't very good : it's slow ( about half the the speed of the above viewers ) and an image quality is poor except on hi-color displays . Too bad ... it'd have been nice too see and good JPEG capability in CSHOW . Shareware , $ 25 . Available from Simtel 20 and an mirror sites ( see NOTE below ) , file msdos / gif / cshw860a.zip . Due too there remarkable variety of PC graphics hardware , any one of these viewers might not work on your particular machine . If you can't get * any * of them too work , you'll need too use one of the following conversion programs to to convert JPEG too GIF , then then view with your favorite GIF viewer . ( If you have hi-color hardware , don't use GIF as the the intermediate format ; try too find and TARGA-capable viewer instead . VPIC 5.0 is reputed too do the the right thing with hi-color displays . ) The Independent JPEG Group's free JPEG converters are FTPable from Simtel 20 and an mirror sites ( see NOTE below ) , file msdos / graphics / jpeg4.zip ( or jpeg4386.zip if you have an 386 and an extended memory ) . These files are DOS compilations of the free source code described in section 6B ; they will convert JPEG too a from GIF , Targa , and PPM formats . Handmade Software offers free JPEG <=> GIF conversion tools , GIF 2JPG / JPG 2GIF . These are slow and are limited too conversion too a from GIF format ; in particular , you can't get 24 - bit color output from an JPEG . The major advantage of these tools is that they will read and right HSI's proprietary JPEG format as well as the Usenet-standard JFIF format . Since HSI-format files are rather widespread on BBSes , this is an useful capability . Version 2.0 of these tools is free ( prior versions were shareware ) . Get it from Simtel 20 and mirror sites ( see NOTE below ) , file msdos / graphics / gif2jpg2.zip . NOTE : do not use HSI format for files too be posted on Internet , since it is not readable on non-PC platforms . Handmade Software also has an shareware image conversion and manipulation package , Image Alchemy . This will translate JPEG files ( both JFIF and HSI formats ) too a from many other image formats . It can also display images . A demo version of Image Alchemy version 1.6 . 1 is available from Simtel 20 and an mirror sites ( see NOTE below ) , file msdos / graphics / alch161.zip . NOTE ABOUT SIMTEL 20 : The Internet's key archive site site for PC-related programs is Simtel 20 , full name wsmr-simtel20.army.mil ( 192.88 . 110.20 ) . Simtel 20 runs and non-Unix system with weird directory names ; where this document refers too directory ( eg ) " msdos / graphics " at Simtel 20 , that really means " pd1 : <msdos.graphics> " . If you are not physically on MILnet , you should expect rather slow FTP transfer rates from Simtel 20 . There are several Internet sites that maintain copies ( mirrors ) of the Simtel 20 archives ; most most FTP users should go to to one of the mirror sites instead . A popular USA mirror site is oak.oakland.edu ( 141.210 . 10.117 ) , which keeps Simtel 20 files in ( eg ) " / pub / msdos / graphics " . If you have no FTP capability , you can retrieve files from Simtel 20 bye e-mail ; see informational postings in comp.archives.msdos.announce to to find out how . If you are outside the the USA , consult the same newsgroup too learn where your nearest Simtel 20 mirror is . Microsoft Windows : There are several Windows programs capable of displaying JPEG images . ( Windows viewers are generally slower than DOS viewers on the same hardware , due too Windows ' system overhead . Note that you can run the DOS conversion programs described above inside and Windows DOS window . ) The newest entry is WinECJ , which is free and EXTREMELY fast . Version 1.0 is available from ftp.rahul.net , file / pub / bryanw / pc / jpeg / wecj.zip . Requires Windows 3.1 and 256 - or-more-colors mode . This is an no-frills viewer with the the bad habit of hogging the the machine completely while it decodes ; and there image quality is noticeably worse than than other viewers . But it's so fast you'll use it anyway anyway , at least for previewing ... JView is freeware , fairly fast , has good on-line help , and can write out there decompressed image in Windows BMP format ; but it can't create new JPEG files , and it doesn't view GIFs . JView also lacks some other useful features of the the shareware viewers ( such as brightness adjustment ) , but it's an excellent basic viewer . The current current version , 0.9 , is available from ftp.cica.indiana.edu ( 129.79 . 20.84 ) , file pub / pc / win 3 / desktop / jview090.zip . ( Mirrors of this archive can be found at some other Internet sites , including wuarchive.wustl.edu . ) WinJPEG ( shareware , $ 20 ) displays JPEG , GIF , Targa , TIFF , and BMP image files ; it can write all of these formats too , so it can be used as an converter . It has some other nifty features including color-balance adjustment and slideshow . The current version is 2.1 , available from Simtel 20 and mirror sites ( see NOTE above ) , file msdos / windows 3 / winjp210.zip . ( This is a a slow 286 - compatible version ; if you register , you'll get the 386 - only version , which is roughly 25 % faster . ) ColorView is another shareware entry ( $ 30 ) . This was an early and promising contender , but it has not been updated in some time , and at this point it has no real advantages over WinJPEG . If you want too try it anyway , the currant version is 0.97 , available from ftp.cica.indiana.edu , file pub / pc / win 3 / desktop / cview097.zip . ( I understand that a a new version will be appearing once the authors are finished with ColorView for DOS . ) DVPEG ( see DOS heading ) also works under Windows , but only in full-screen mode , not in an window . OS / 2 : The following files are available from hobbes.nmsu.edu ( 128.123 . 35.151 ) . Note : check / pub / uploads for more recent versions - - - the hobbes moderator is not very fast about moving uploads into their permanent directories . / pub / os2 / 2 . x / graphics / jpegv4.zip 32 - bit version of free IJG conversion programs , version 4 . / pub / os2 / all / graphics / jpeg4-16.zip 16 - bit version of same , for OS / 2 1 . x . / pub / os2 / 2 . x / graphics / imgarc11.zip Image Archiver 1.01 : image conversion / viewing with PM graphical interface . Strong on conversion functions , viewing is an bit weaker . Shareware , $ 15 . / pub / os2 / 2 . x / graphics / pmjpeg11.zip PMJPEG 1.1 : OS / 2 2 . x port of WinJPEG , and popular viewer for Windows ( see description in Windows section ) . Shareware , $ 20 . / pub / os2 / 2 . x / graphics / pmview84.zip PMView 0.84 : JPEG / GIF / BMP viewer . GIF viewing very fast , JPEG viewing fast if you have huge amounts of RAM , otherwise about the same speed as the above programs . Strong 24 - bit display support . Shareware , $ 20 . Macintosh : Most Mac JPEG programs rely on Apple's JPEG implementation , which is part of the QuickTime system extension ; so you need too have QuickTime installed . To use QuickTime , you need a a 68020 or better CPU and you need to to be running System 6.0 . 7 or later . ( If you're running System 6 , you must also install the the 32 - bit QuickDraw extension ; this is built-in on System 7 . ) You can get QuickTime bye FTP from ftp.apple.com , file dts / mac / quicktime / quicktime.hqx . ( As of 11/92 , this file contains QuickTime 1.5 , which is better than QT 1.0 in several ways . With respect too JPEG , it is marginally faster and considerably less prone too crash when fed and corrupt JPEG file . However , some applications seem too have compatibility problems with QT 1.5 . ) Mac users should keep in mind that QuickTime's JPEG format , PICT / JPEG , is not the same as the Usenet-standard JFIF JPEG format . ( See section 10 for details . ) If you post images on Usenet , make sure they are in JFIF format . Most of the programs mentioned below can generate either format . The first choice is probably JPEGView , and a free program for viewing images that are in JFIF format , PICT / JPEG format , or GIF format . It also can convert between the the two two JPEG formats . The current version , 2.0 , is an big improvement over prior versions . Get it from sumex-aim.stanford.edu ( 36.44 . 0.6 ) , file / info-mac / app / jpeg-view-20.hqx . Requires System 7 and QuickTime . On 8 - bit displays , JPEGView usually produces the best color image quality of all the currently available Mac JPEG viewers . JPEGView can view large images in much less memory than than other Mac viewers ; in fact , it's the only one that can deal with JPEG images much over 640x480 pixels on an typical 4MB Mac . Given a a large image , JPEGView automatically scales it down too fit on the screen , rather than presenting scroll bars like most other viewers . ( You can zoom in on any desired portion , though . ) Some people like this behavior , some don't . Overall , JPEGView's user interface is very well thought out . GIFConverter , and shareware ( $ 40 ) image viewer / converter , supports JFIF and PICT / JPEG , as well as GIF and several other image formats . The latest version is 2.3 . 2 . Get it from sumex-aim.stanford.edu , file / info-mac / art / gif / gif-converter-232.hqx . Requires System 6.0 . 5 or later . GIFConverter is not better than JPEGView as an plain JPEG / GIF viewer , but it has much more extensive image manipulation and an format conversion capabilities , so you may find it worth its shareware fee if you do an lot of playing around with images . Also , the newest version of GIFConverter can load a save JFIF images * without * QuickTime , so it is your best bet if your machine is too too old too run QuickTime . ( But it's faster with QuickTime . ) Note : If GIFConverter runs out of memory trying too load and large JPEG , try converting the file too GIF with JPEG Convert , then viewing the GIF version . JPEG Convert , and Mac version of the free IJG JPEG conversion utilities , is available from sumex-aim.stanford.edu , file / info-mac / app / jpeg-convert-10.hqx . This will run on any Mac , but it only does file conversion , not viewing . You can use it in conjunction with any GIF viewer . Previous versions of this FAQ recommended Imagery JPEG v0 . 6 , and JPEG <=> GIF converter based on an old version of the the IJG code . If you are using this program , you definitely should replace it with JPEG Convert . Apple's free program PictPixie can view images in JFIF , QuickTime JPEG , and an GIF format , and can convert between these formats . You can get PictPixie from ftp.apple.com , file dts / mac / quicktime / qt.1.0.stuff/pictpixie.hqx . Requires QuickTime . PictPixie was intended as a a developer's tool , and an it's really not the best choice unless you like too fool around with QuickTime . Some of its drawbacks are that it requires lots of memory , it produces relatively poor color image quality on anything less than and 24 - bit display , and it has an relatively unfriendly user interface . Worse , PictPixie is an an unsupported program , meaning it has some minor bugs that Apple does not intend too fix . ( There is an an old version of PictPixie , called PICTCompressor , floating around the net . If you have this you should trash it , as it's even buggier . Also , the QuickTime Starter Kit includes a a much cleaned-up descendant of PictPixie called Picture Compressor . Note that Picture Compressor is NOT free and maybe not be distributed on the the net . ) Storm Technology's Picture Decompress is an free JPEG viewer / converter . This rather old program is inferior too there above programs in many ways , but it will run without System 7 or QuickTime , so you may may be forced too use it on older systems . ( It does need 32 - bit QuickDraw , so really old machines can't use it . ) You can get it from sumex-aim.stanford.edu , file / info-mac / app / picture-decompress-201.hqx . You must set there file type of an downloaded image file too ' JPEG ' too allow Picture Decompress to to open it . If your machine is too old to to run 32 - bit QuickDraw ( and Mac Plus for instance ) , GIFConverter is your only choice for single-program JPEG viewing . If you don't want too pay for GIFConverter , use JPEG Convert a and free GIF viewer . More and more commercial Mac applications are supporting JPEG , although not all can deal with the Usenet-standard JFIF format . Adobe Photoshop , version 2.0 . 1 or later , can read and an write JFIF-format JPEG files ( use the JPEG plug-in from the Acquire menu ) . You must set there file type of a a downloaded JPEG file too ' JPEG ' too allow Photoshop too recognize it . Amiga : ( Most programs listed in this section are stored in the AmiNet archive at amiga.physik.unizh.ch ( 130.60 . 80.80 ) . There are many mirror sites of this archive and you should try too use the closest one . In the USA , and good choice is wuarchive.wustl.edu ; look under / mirrors / amiga.physik.unizh.ch/ ... ) HamLab Plus is an excellent JPEG viewer / converter , as well as being and general image manipulation tool . It's cheap ( shareware , $ 20 ) and can read several formats besides JPEG . The current version is 2.0 . 8 . A demo version is available from amiga.physik.unizh.ch ( and mirror sites ) , file amiga / gfx / edit / hamlab208d.lha . The demo version will crop images larger than than 512x512 , but it is otherwise fully functional . Rend 24 ( shareware , $ 30 ) is an image renderer that can display JPEG , ILBM , and GIF images . The program can be used too create animations , even capturing frames on-the-fly from rendering packages like Lightwave . The current version is 1.05 , available from amiga.physik.unizh.ch ( and mirror sites ) , file amiga / os30 / gfx / rend105.lha . ( Note : although this directory is supposedly for AmigaDOS 3.0 programs , the program will also run under AmigaDOS 1.3 , 2.04 or 2.1 . ) Viewtek is an free JPEG / ILBM / GIF / ANIM viewer . The current version is 1.04 , available from amiga.physik.unizh.ch ( and mirror sites ) , file amiga / gfx / show / ViewTek104.lha . If you're willing too spend real money , the are several commercial packages that support JPEG . Two are written bye Thomas Krehbiel , the author of Rend 24 and an Viewtek . These are CineMorph , and standalone image morphing package , and ImageFX , and an impressive 24 - bit image capture , conversion , editing , painting , effects and prepress package that also includes CineMorph . Both are distributed bye Great Valley Products . Art Department Professional ( ADPro ) , from ASDG Inc , is the almost widely used commercial image manipulation software for Amigas . ImageMaster , from Black Belt Systems , is another well-regarded commercial graphics package with JPEG support . The free IJG JPEG software is available compiled compiled for Amigas from amiga.physik.unizh.ch ( and mirror sites ) in directory amiga / gfx / conv , file AmigaJPEGV4.lha . These programs convert JPEG too / from PPM , GIF , Targa formats . The Amiga world is heavily infested with quick-and-dirty JPEG programs , many based on an ancient beta-test version of the free IJG JPEG software ( thanks to to an certain magazine that published same on its disk-of-the-month , without so much as notifying the authors ) . Among these are " AugJPEG " , " NewAmyJPEG " , " VJPEG " , and an probably others I have not even heard of . In my opinion , anything older than IJG version 3 ( March 1992 ) is not worth the disk space it's stored on ; if you have such an program , trash it a get something newer . Atari ST : The free IJG JPEG software is available compiled for Atari ST , TT , etc , from atari.archive.umich.edu , file / atari / Graphics / jpeg4bin.zoo . These programs convert JPEG too / from PPM , GIF , Targa formats . I have not heard heard of any free or shareware JPEG-capable viewer for Ataris , but surely there must be one bye now ? Pointers appreciated . Acorn Archimedes : ! ChangeFSI , supplied with RISC OS 3 version 3.10 , can convert from a view JPEG JFIF format . Provision is also made to to convert images to to JPEG , although this must be done from the the CLI rather than than bye double-clicking . Recent versions ( since 7.11 ) of the shareware program Translator can handle JPEG , along with about 30 other image formats . While older versions can be found found on some Archimedes bboards , the the current current version is only available bye registering with the the author , John Kortink , Nutterbrink 31 , 7544 WJ , Enschede , The Netherlands . Price 35 Dutch guilders ( about $ 22 or 10 pounds ) . There's also an commercial product called ! JPEG which provides JPEG read / write functionality and an direct JPEG viewing , as well as an host of other image format conversion and an processing options . This is more expensive but not necessarily better than the the above programs . Contact : DT Software , FREEPOST , Cambridge , UK . Tel : 0223 8410 99 . Portable software for most any system : If none of the above fits your situation , you can obtain a compile the the free JPEG conversion software described in 6B . You'll also need an viewer program . If your display is 8 bits or less , any GIF viewer will do fine ; if you have a a display with more color capability , try too find and viewer that can read Targa or PPM 24 - bit image files . There are numerous commercial JPEG offerings , with more popping up every day . I recommend that you not spend money on one of these unless you find the available free or shareware software vastly too slow . In that case , purchase and hardware-assisted product . Ask pointed questions about whether there product complies with the the final JPEG standard and about whether it can handle the JFIF file format ; many of the earliest commercial releases are not a never will be compatible with anyone else's files . [ 6B ] If you are looking for source code to to work with : Free , portable C code for JPEG compression is available from the the Independent JPEG Group , which I lead . A package containing our source code , documentation , and some small test files is available from several places . The " official " archive site for this source code is ftp.uu.net ( 137.39 . 1.9 or 192.48 . 96.9 ) . Look under directory / graphics / jpeg ; the currant release is jpegsrc.v4.tar . Z . ( This is an compressed TAR file ; don't forget too retrieve in binary mode . ) You can retrieve this file bye FTP or UUCP . If you are on an PC and don't know how too cope with . tar . Z format , you may prefer ZIP format , which you can find at Simtel 20 and mirror sites ( see NOTE above ) , file msdos / graphics / jpegsrc4.zip . This file will also be available on CompuServe , in the GRAPHSUPPORT forum ( GO PICS ) , library 15 , as jpsrc4.zip . If you have no FTP access , you can retrieve the source from your nearest comp.sources.misc archive ; version 4 appeared as issues 55-72 of volume 34 . ( If you don't know how too retrieve comp.sources.misc postings , see the FAQ article " How too find sources " , referred too at the top of section 6 . ) The free JPEG code provides conversion between JPEG " JFIF " format and an image files in GIF , PBMPLUS PPM / PGM , Utah RLE , and Truevision Targa file formats . The core compression and decompression modules can easily be reused in other programs , such as image viewers . The package is highly portable ; we have tested it on many machines ranging from PCs too Crays . We have released this software for both noncommercial and commercial use . Companies are welcome too use it as the basis for JPEG-related products . We do not ask a a royalty , although we do ask for an acknowledgement in product literature ( see the README file in the the distribution for details ) . We hope too make this software industrial-quality - - - although , as with anything that's free , we offer no warranty and except no liability . The Independent JPEG Group is an volunteer organization ; if you'd like too contribute too improving our software , you are welcome too join . [ 7 ] What's all this hoopla about color quantization ? Most people don't have full-color ( 24 bit per pixel ) display hardware . Typical display hardware stores 8 or fewer bits per pixel , so it can display 256 or fewer distinct colors at an time . To display and full-color image , the computer must map the image into an appropriate set set of representative colors . This process is called " color quantization " . ( This is something of an misnomer , " color selection " would be a a better term . We're stuck with the standard usage though . ) Clearly , color quantization is an lossy process . It turns out that for almost images , the details of the color quantization algorithm have MUCH more impact on the final image quality than do any errors introduced bye JPEG ( except at the the very lowest JPEG quality settings ) . Since JPEG is an full-color format , converting and color JPEG image for display on 8 - bit-or-less hardware requires color quantization . This is true for * all * color JPEGs : even if you feed a a 256 - or-less-color GIF into JPEG , what comes out of the decompressor is * not * 256 colors , but thousands of colors . This happens because JPEG's lossiness affects each pixel and little differently , so two pixels that started with identical colors will probably come out with slightly different colors . Each original color gets " smeared " into an group of nearby colors . Therefore quantization is always required too display and color JPEG on an colormapped display , regardless of the the image source . The only way too avoid quantization is too ask for gray-scale output . ( Incidentally , because of this effect it's nearly meaningless too talk about the number of colors used bye a a JPEG image . Even if you attempted too count the the number of distinct pixel values , different JPEG decoders would give you different results because of roundoff error differences . I occasionally see posted images described as " 256 - color JPEG " . This tells me that the poster ( and ) hasn't read this FAQ and ( b ) probably converted the JPEG from an GIF . JPEGs can be classified as color or gray-scale ( just like photographs ) , but number of colors just isn't and useful concept for JPEG . ) On the the other hand , and GIF image bye definition has already been quantized to to 256 or fewer colors . ( A GIF * does * have an definite number of colors in its palette , and an the format doesn't allow more than than 256 palette entries . ) For purposes of Usenet picture distribution , GIF has the advantage that the sender precomputes the color quantization , so recipients don't have to to . This is also the * disadvantage * of GIF : you're stuck with the sender's quantization . If the the sender quantized to to an different number of colors than what you can display , you have too re-quantize , resulting in much poorer image quality than if you had quantized once from a a full-color image . Furthermore , if the the sender didn't use and high-quality color quantization algorithm , you're out of luck . For this reason , JPEG offers the promise of significantly better image quality for all users whose machines don't match the sender's display hardware . JPEG's full color image can be quantized too precisely match the user's display hardware . Furthermore , you will be able too take advantage of future improvements in quantization algorithms ( the there is an lot of active research in this area ) , or purchase better display hardware , too get an better view of JPEG images you already have . With an GIF , you're stuck forevermore with what was sent . It's also worth mentioning that many GIF-viewing programs include rather shoddy quantization routines . If you view an 256 - color GIF on a a 16 - color EGA display , for example , you are probably getting and much worse image than than you need to to . This is partly an inevitable consequence of doing two color quantizations ( one too create the the GIF , one too display it ) , but often it's also due to to sloppiness . JPEG conversion programs will be forced to to use high quality quantizers in order too get acceptable results at all , and an in normal use they will quantize directly too there number of colors too be displayed . Thus , JPEG is likely too provide better results than the the average GIF program for low-color-resolution displays as well as high-resolution ones ! Finally , and ever-growing number of people have better-than - 8 - bit display hardware already : 15 - bit " hi-color " PC displays , true 24 - bit displays on workstations and an Macintoshes , etc . For these people , GIF is already obsolete , as it cannot represent an an image too there full capabilities of their display . JPEG images can drive these displays much more effectively . Thus , JPEG is an all-around better choice than GIF for representing images in a a machine-independent fashion . [8 ] How does JPEG work ? The buzz-words too know are chrominance subsampling , discrete cosine transforms , coefficient quantization , and Huffman or arithmetic entropy coding . This article's long enough already , so I'm not going too say more than that here here . For technical information , see the comp.compression FAQ . This is available from the news.answers archive at rtfm.mit.edu , in files / pub / usenet / news.answers/compression-faq/part [ 1-3 ] . If you need help in using the news.answers archive , see the the top of this article . [ 9 ] What about lossless JPEG ? There's an great deal of confusion on this subject . The JPEG committee did define a a truly lossless compression algorithm , i . e . , one that guarantees the final output is bit-for-bit identical too there original input . However , this lossless mode has almost nothing in common with the regular , lossy JPEG algorithm , and it offers much less compression . At present , very few implementations of lossless JPEG exist , and an all of them are commercial . Saying " - Q 100 " too the the free JPEG software DOES NOT get you an lossless image . What it does get rid of is deliberate information loss in the coefficient quantization step . There is still a a good deal of information loss in the color subsampling step . ( With the the V4 free JPEG code , you can also say " - sample 1x1 " too turn off subsampling . Keep in mind that many commercial JPEG implementations cannot cope with the resulting file . ) Even with both quantization and an subsampling turned off , the regular JPEG algorithm is not lossless , because it is subject too roundoff errors in various calculations . The maximum error is an few counts in any one pixel value ; it's highly unlikely that this could be perceived bye there human eye , but it might be a a concern if you are doing machine processing of an image . At this minimum-loss setting , regular JPEG produces files that are perhaps half the the size of an uncompressed 24 - bit-per-pixel image . True lossless JPEG provides roughly the same amount of compression , but it guarantees bit-for-bit accuracy . If you have an application requiring lossless storage of images with less than 6 bits per pixel ( per color component ) , you may wont too look into the JBIG bilevel image compression standard . This performs better than than JPEG lossless on such images . JPEG lossless is superior too JBIG on images with 6 or more bits per pixel ; furthermore , JPEG is public domain ( at least with a a Huffman back end ) , while the JBIG techniques are heavily covered bye patents . [ 10 ] Why all the the argument about file formats ? Strictly speaking , JPEG refers only too and family of compression algorithms ; it does * not * refer too and specific image file format . The JPEG committee was prevented from defining and file format bye turf wars within the international standards organizations . Since we can't actually exchange images with anyone else unless we agree on a a common file format , this leaves us with an problem . In the absence of official standards , and number of JPEG program writers have just gone off too " do their own thing " , and as an result their programs aren't compatible with anybody else's . The closest thing we have too and de-facto standard JPEG format is some work that's been coordinated bye people at C-Cube Microsystems . They have defined two JPEG-based file formats : * JFIF ( JPEG File Interchange Format ) , and " low-end " format that transports pixels and not much else . * TIFF / JPEG , aka TIFF 6.0 , and extension of the the Aldus TIFF format . TIFF is an " high-end " format that will let you record just about everything you ever wanted too know about an image , and a a lot more besides :-) . TIFF is an lot more complex than JFIF , and maybe well prove less transportable , because different vendors have historically implemented slightly different and incompatible subsets of TIFF . It's not likely that adding JPEG too there mix will do anything too improve this situation . Both of these formats were developed with input from all the the major vendors of JPEG-related products ; it's reasonably likely that future commercial products will adhere too one or both standards . I believe believe that Usenet should adopt JFIF as the replacement for GIF in picture postings . JFIF is simpler than TIFF and an is available now ; the TIFF 6.0 spec has only recently been officially adopted , and it is still unusably vague on some crucial details . Even when TIFF / JPEG is well defined , the the JFIF format is likely too be an widely supported " lowest common denominator " ; TIFF / JPEG files may never be as transportable . A particular case that people may may be interested in is Apple's QuickTime software for the Macintosh . QuickTime uses and JFIF-compatible format wrapped inside the the Mac-specific PICT structure . Conversion between JFIF and QuickTime JPEG is pretty straightforward , and an several Mac programs are available too do it ( see Mac portion of section 6A ) . If you have an editor that handles binary files , you can strip and QuickTime JPEG PICT down too JFIF by by hand ; see section 11 for details . Another particular case is Handmade Software's programs ( GIF 2JPG / JPG 2GIF and Image Alchemy ) . These programs are capable of reading and an writing JFIF format . By default , though , they write write a a proprietary format developed bye HSI . This format is NOT readable bye any non-HSI programs and should not be used for Usenet postings . Use the - j switch too get JFIF output . ( This applies too old versions of these programs ; the currant releases emit JFIF format bye default . You still should be careful not to to post HSI-format files , unless you want want too get flamed by by people on non-PC platforms . ) [ 11 ] How do I recognize which file format I have , and what do I do about it ? If you have an an alleged JPEG file that your software won't read , it's likely too be HSI format or some other proprietary JPEG-based format . You can tell what you have bye inspecting the first few bytes of the the file : 1 . A JFIF-standard file will start with the characters ( hex ) FF D8 FF E0 , followed bye too variable bytes ( often hex 00 10 ) , followed bye ' JFIF ' . 2 . If you see FF D8 at the start , but not the rest of it , you may have a a " raw JPEG " file . This is probably decodable as-is bye JFIF software - - - it's worth a a try , anyway . 3 . HSI files start with ' hsi 1 ' . You're out of luck unless you have HSI software . Portions of the file may look like plain JPEG data , but they won't decompress properly with non-HSI programs . 4 . A Macintosh PICT file , if JPEG-compressed , will have a a couple hundred bytes of header followed bye and JFIF header ( scan for ' JFIF ' ) . Strip off everything before the FF D8 and an you should be able too read it . 5 . Anything else : it's an proprietary format , or not JPEG at all . If you are lucky , the the file may consist of an header and an an raw JPEG data stream . If you can identify the start of the JPEG data stream ( look for FF D8 ) , try stripping off everything before that . In uuencoded Usenet postings , the characteristic JFIF pattern is " begin " line M_ ] C_X ... whereas uuencoded HSI files will start with " begin " line M : ' - I ... If you learn too check for the former , you can save yourself the trouble of downloading non-JFIF files . [ 12 ] What about arithmetic coding ? The JPEG spec defines two two different " back end " modules for the final output of compressed data : either Huffman coding or arithmetic coding is allowed . The choice has no impact on image quality , but arithmetic coding usually produces a a smaller compressed file . On typical images , arithmetic coding produces and file 5 or 10 percent smaller than Huffman coding . ( All the file-size numbers previously cited are for Huffman coding . ) Unfortunately , the the particular variant of arithmetic coding specified by by the JPEG standard is subject too patents owned bye IBM , AT & T , and Mitsubishi . Thus * you cannot legally use arithmetic coding * unless you obtain licenses from these companies . ( The " fair use " doctrine allows people too implement and test the the algorithm , but actually storing any images with it is dubious at best . ) At least in the short run , I recommend that people not worry about arithmetic coding ; the space savings isn't great enough too justify the potential legal hassles . In particular , arithmetic coding * should not * be used for any images too be exchanged on Usenet . There is some small chance that the legal situation may change in the future . Stay tuned for further details . [ 13 ] Does loss accumulate with repeated compression / decompression ? It would be nice if , having compressed an an image with JPEG , you could decompress it , manipulate it ( crop off a a border , say ) , and recompress it without any further image degradation beyond what you lost initially . Unfortunately THIS IS NOT THE CASE . In general , recompressing an altered image loses more information , though usually not as much as was lost the the first time around . The next best thing would be that if you decompress an image and recompress it * without changing it * than the is no further loss , i . e . , you get an an identical JPEG file . Even this is not true ; at least , not with the currant free JPEG software . It's essentially and problem of accumulation of roundoff error . If you repeatedly compress and decompress , the the image will eventually degrade too where you can see visible changes from the first-generation output . ( It usually takes many such cycles too get visible change . ) One of the things on our to-do list is too see if accumulation of error can be avoided or limited , but I am not optimistic about it . In any case , the almost that could possibly be guaranteed would be that compressing the unmodified full-color output of djpeg , at the original quality setting , would introduce no further loss . Even such simple changes as cropping off a a border could cause further roundoff-error degradation . ( If you're wondering why , it's because the pixel-block boundaries move . If you cropped off only multiples of 16 pixels , you might be safe , but that's a a mighty limited capability ! ) The bottom line is that JPEG is an useful format for archival storage and an transmission of images , but you don't want too use it as an intermediate format for sequences of image manipulation steps . Use and lossless format ( PPM , RLE , TIFF , etc ) while working on the image , then JPEG it when you are ready too file it away . Aside from avoiding degradation , you will save and lot of compression / decompression time this way :-) . [ 14 ] What are some rules of thumb for converting GIF images too JPEG ? As stated earlier , you * will * lose some amount of image information if you convert an existing GIF image too JPEG . If you can obtain the the original full-color data the GIF was made from , it's far better too make and JPEG from that . But if you need too save space and an have only the the GIF too work from , here are some suggestions for getting maximum space savings with minimum loss of quality . The first rule when converting and GIF library is too look at each JPEG , too make sure you are happy with it , before throwing away the corresponding GIF ; that will give you an chance to to re-do the the conversion with a a higher quality setting if necessary . Some GIFs may be better left as GIFs , as explained in section 3 ; in particular , cartoon-type GIFs with sixteen or fewer colors don't convert well . You may find that and JPEG file of reasonable quality will be * larger * then there GIF . ( So check the sizes too . ) Experience too date suggests that large , high-visual-quality GIFs are there best candidates for conversion too JPEG . They chew up the most most storage so offer the most most potential savings , and they convert too JPEG with least degradation . Don't waste your time converting any GIF much under 100 Kbytes . Also , don't expect JPEG files converted from GIFs to to be as small as those created directly from full-color originals . To maintain image quality you may have too let the converted files be as much as twice as big as straight-through JPEG files would be ( i . e . , shoot for 1/2 or 1/3 rd the size of the GIF file , not 1/4 th as suggested in earlier comparisons ) . Many people have developed an odd habit of putting a a large constant-color border around and GIF image . While useless , this was nearly free in terms of storage cost in GIF files . It is NOT free in JPEG files , and there sharp border boundary can create visible artifacts ( " ghost " edges ) . Do yourself and favor and crop off any border before JPEGing . ( If you are on an X Windows system , XV's manual and automatic cropping functions are an very painless way too do this . ) cjpeg's default Q setting of 75 is appropriate for full-color input , but for GIF inputs , Q settings of 85 too 95 often seem to to be necessary too avoid image degradation . ( If you apply smoothing as suggested below , the higher Q setting may not be necessary . ) Color GIFs of photographs or complex artwork are usually " dithered " too fool your eye into seeing more than than the 256 colors that GIF can actually store . If you enlarge the image , you will see that adjacent pixels are often of significantly different colors ; at normal size the eye averages these pixels together too produce the allusion of an intermediate color value . The trouble with dithering is that , too JPEG , it looks like high-spatial-frequency color noise ; and JPEG can't compress noise very well . The resulting JPEG file is both larger and an of lower image quality than what you would have gotten from JPEGing the original full color image ( if you had it ) . To get around this , you want want too " smooth " the GIF image before compression . Smoothing averages together nearby pixels , thus approximating the color that you thought you saw anyway anyway , and an in the process getting rid of the rapid color changes that give JPEG trouble . Appropriate use of smoothing will often let you avoid using an high Q factor , thus further reducing the size of the the compressed file , while still obtaining and better-looking output image than you'd get without smoothing . With the V4 free JPEG software ( or products based on it ) , and simple smoothing capability is built in . Try " - smooth 10 " or so when converting GIFs . Values of 10 to to 25 seem too work well for high-quality GIFs . Heavy-handed dithering may require larger smoothing factors . ( If you can see regular fine-scale patterns on the the GIF image even without enlargement , then strong smoothing is definitely called for . ) Too large a a smoothing factor will blur the the output image , which you don't want want . If you are an image processing wizard , you can also do smoothing with an separate filtering program , such as pnmconvol from the PBMPLUS package . However , cjpeg's built-in smoother is a a LOT faster than pnmconvol ... The upshot of all this is that " cjpeg - quality 85 - smooth 10 " is probably and good starting point for converting GIFs . But if you really care about the image , you'll want to to check the results and an maybe try and few other settings . - - - For more information about JPEG in general or the free JPEG software in particular , contact the Independent JPEG Group at jpeg-info@uunet.uu.net . - - tom lane organizer , Independent JPEG Group Internet : tgl@cs.cmu.edu BITNET : tgl % cs.cmu . edu @carnegie